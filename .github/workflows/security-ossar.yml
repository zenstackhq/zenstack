# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates a collection of open source static analysis tools
# with GitHub code scanning. For documentation, or to provide feedback, visit
# https://github.com/github/ossar-action
name: Security - OSSAR

on:
    merge_group:
    push:
        branches:
            - main
            - dev
            - release/*
            - v2
    pull_request:
        branches:
            - main
            - dev
            - release/*
            - v2
    schedule:
        - cron: '41 3 * * 5'

permissions:
    contents: read

jobs:
    OSSAR-Scan:
        runs-on: windows-latest
        permissions:
            contents: read # for actions/checkout to fetch code
            security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
            actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@v2.7.0
              with:
                  egress-policy: audit

            - name: Workflow Telemetry
              uses: catchpoint/workflow-telemetry-action@v1.8.7
              with:
                  github_token: ${{ secrets.BOT_TOKEN || github.token }} # Bot Token is a PAT for a automation account.
                  comment_on_pr: false
                  theme: dark
                  proc_trace_sys_enable: true

            # checks out the repository
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  token: ${{ secrets.BOT_TOKEN || github.token }} # Bot Token is a PAT for a automation account.

            - uses: actions/setup-dotnet@v3.2.0
              with:
                  dotnet-version: |
                      5.0.x
                      6.0.x

            # Run open source static analysis tools
            - name: Run OSSAR
              uses: github/ossar-action@v1
              id: ossar

              # Upload results to the Security tab
            - name: Upload OSSAR results
              uses: github/codeql-action/upload-sarif@v2.22.12
              with:
                  sarif_file: ${{ steps.ossar.outputs.sarifFile }}
