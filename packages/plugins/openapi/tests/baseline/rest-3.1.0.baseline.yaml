openapi: 3.1.0
info:
    title: ZenStack Generated API
    version: 1.0.0
tags:
    - name: user
      description: User operations
    - name: profile
      description: Profile operations
    - name: post_Item
      description: Post-related operations
paths:
    /user:
        get:
            operationId: list-User
            description: List "User" resources
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/role'
                - name: filter[posts]
                  required: false
                  description: Equality filter for "posts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[profile]
                  required: false
                  description: Equality filter for "profile"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User
            description: Create a "User" resource
            tags:
                - user
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/UserCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /user/{id}:
        get:
            operationId: fetch-User
            description: Fetch a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-put
            description: Update a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/UserUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-patch
            description: Update a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/UserUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-User
            description: Delete a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /user/{id}/posts:
        get:
            operationId: fetch-User-related-posts
            description: Fetch the related "posts" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/role'
                - name: filter[posts]
                  required: false
                  description: Equality filter for "posts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[profile]
                  required: false
                  description: Equality filter for "profile"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/post_ItemListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /user/{id}/relationships/posts:
        get:
            operationId: fetch-User-relationship-posts
            description: Fetch the "posts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/role'
                - name: filter[posts]
                  required: false
                  description: Equality filter for "posts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[profile]
                  required: false
                  description: Equality filter for "profile"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-posts-put
            description: Update "posts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-posts-patch
            description: Update "posts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User-relationship-posts
            description: Create new "posts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /user/{id}/profile:
        get:
            operationId: fetch-User-related-profile
            description: Fetch the related "profile" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ProfileResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /user/{id}/relationships/profile:
        get:
            operationId: fetch-User-relationship-profile
            description: Fetch the "profile" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-profile-put
            description: Update "profile" relationship for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-profile-patch
            description: Update "profile" relationship for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /profile:
        get:
            operationId: list-Profile
            description: List "Profile" resources
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[user]
                  required: false
                  description: Equality filter for "user"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ProfileListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Profile
            description: Create a "Profile" resource
            tags:
                - profile
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/ProfileCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ProfileResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /profile/{id}:
        get:
            operationId: fetch-Profile
            description: Fetch a "Profile" resource
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ProfileResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Profile-put
            description: Update a "Profile" resource
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/ProfileUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ProfileResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Profile-patch
            description: Update a "Profile" resource
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/ProfileUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ProfileResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Profile
            description: Delete a "Profile" resource
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /profile/{id}/user:
        get:
            operationId: fetch-Profile-related-user
            description: Fetch the related "user" resource for "Profile"
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /profile/{id}/relationships/user:
        get:
            operationId: fetch-Profile-relationship-user
            description: Fetch the "user" relationships for a "Profile"
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Profile-relationship-user-put
            description: Update "user" relationship for a "Profile"
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Profile-relationship-user-patch
            description: Update "user" relationship for a "Profile"
            tags:
                - profile
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /post_Item:
        get:
            operationId: list-post_Item
            description: List "post_Item" resources
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[title]
                  required: false
                  description: Equality filter for "title"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[title$contains]
                  required: false
                  description: String contains filter for "title"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[title$icontains]
                  required: false
                  description: String case-insensitive contains filter for "title"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[title$search]
                  required: false
                  description: String full-text search filter for "title"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[title$startsWith]
                  required: false
                  description: String startsWith filter for "title"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[title$endsWith]
                  required: false
                  description: String endsWith filter for "title"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[author]
                  required: false
                  description: Equality filter for "author"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[published]
                  required: false
                  description: Equality filter for "published"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[viewCount]
                  required: false
                  description: Equality filter for "viewCount"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: integer
                - name: filter[viewCount$lt]
                  required: false
                  description: Less-than filter for "viewCount"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: integer
                - name: filter[viewCount$lte]
                  required: false
                  description: Less-than or equal filter for "viewCount"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: integer
                - name: filter[viewCount$gt]
                  required: false
                  description: Greater-than filter for "viewCount"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: integer
                - name: filter[viewCount$gte]
                  required: false
                  description: Greater-than or equal filter for "viewCount"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: integer
                - name: filter[notes]
                  required: false
                  description: Equality filter for "notes"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[notes$contains]
                  required: false
                  description: String contains filter for "notes"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[notes$icontains]
                  required: false
                  description: String case-insensitive contains filter for "notes"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[notes$search]
                  required: false
                  description: String full-text search filter for "notes"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[notes$startsWith]
                  required: false
                  description: String startsWith filter for "notes"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[notes$endsWith]
                  required: false
                  description: String endsWith filter for "notes"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/post_ItemListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-post_Item
            description: Create a "post_Item" resource
            tags:
                - post_Item
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/post_ItemCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/post_ItemResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /post_Item/{id}:
        get:
            operationId: fetch-post_Item
            description: Fetch a "post_Item" resource
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/post_ItemResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-post_Item-put
            description: Update a "post_Item" resource
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/post_ItemUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/post_ItemResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-post_Item-patch
            description: Update a "post_Item" resource
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/post_ItemUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/post_ItemResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-post_Item
            description: Delete a "post_Item" resource
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /post_Item/{id}/author:
        get:
            operationId: fetch-post_Item-related-author
            description: Fetch the related "author" resource for "post_Item"
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /post_Item/{id}/relationships/author:
        get:
            operationId: fetch-post_Item-relationship-author
            description: Fetch the "author" relationships for a "post_Item"
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-post_Item-relationship-author-put
            description: Update "author" relationship for a "post_Item"
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-post_Item-relationship-author-patch
            description: Update "author" relationship for a "post_Item"
            tags:
                - post_Item
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
components:
    schemas:
        _jsonapi:
            type: object
            description: An object describing the server’s implementation
            required:
                - version
            properties:
                version:
                    type: string
        _meta:
            type: object
            description: Meta information about the request or response
            properties:
                serialization:
                    description: Superjson serialization metadata
            additionalProperties: true
        _resourceIdentifier:
            type: object
            description: Identifier for a resource
            required:
                - type
                - id
            properties:
                type:
                    type: string
                    description: Resource type
                id:
                    type: string
                    description: Resource id
        _resource:
            allOf:
                - $ref: '#/components/schemas/_resourceIdentifier'
                - type: object
                  description: A resource with attributes and relationships
                  properties:
                      attributes:
                          type: object
                          description: Resource attributes
                      relationships:
                          type: object
                          description: Resource relationships
        _links:
            type: object
            required:
                - self
            description: Links related to the resource
            properties:
                self:
                    type: string
                    description: Link for refetching the curent results
        _pagination:
            type: object
            description: Pagination information
            required:
                - first
                - last
                - prev
                - next
            properties:
                first:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the first page
                last:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the last page
                prev:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the previous page
                next:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the next page
        _errors:
            type: array
            description: An array of error objects
            items:
                type: object
                required:
                    - status
                    - code
                properties:
                    status:
                        type: string
                        description: HTTP status
                    code:
                        type: string
                        description: Error code
                    prismaCode:
                        type: string
                        description: Prisma error code if the error is thrown by Prisma
                    title:
                        type: string
                        description: Error title
                    detail:
                        type: string
                        description: Error detail
                    reason:
                        type: string
                        description: Detailed error reason
                    zodErrors:
                        type: object
                        additionalProperties: true
                        description: Zod validation errors if the error is due to data validation
                            failure
        _errorResponse:
            type: object
            required:
                - errors
            description: An error response
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                errors:
                    $ref: '#/components/schemas/_errors'
        _relationLinks:
            type: object
            required:
                - self
                - related
            description: Links related to a relationship
            properties:
                self:
                    type: string
                    description: Link for fetching this relationship
                related:
                    type: string
                    description: Link for fetching the resource represented by this relationship
        _toOneRelationship:
            type: object
            description: A to-one relationship
            properties:
                data:
                    oneOf:
                        - type: 'null'
                        - $ref: '#/components/schemas/_resourceIdentifier'
        _toOneRelationshipWithLinks:
            type: object
            required:
                - links
                - data
            description: A to-one relationship with links
            properties:
                links:
                    $ref: '#/components/schemas/_relationLinks'
                data:
                    oneOf:
                        - type: 'null'
                        - $ref: '#/components/schemas/_resourceIdentifier'
        _toManyRelationship:
            type: object
            required:
                - data
            description: A to-many relationship
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resourceIdentifier'
        _toManyRelationshipWithLinks:
            type: object
            required:
                - links
                - data
            description: A to-many relationship with links
            properties:
                links:
                    $ref: '#/components/schemas/_pagedRelationLinks'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resourceIdentifier'
        _pagedRelationLinks:
            description: Relationship links with pagination information
            allOf:
                - $ref: '#/components/schemas/_pagination'
                - $ref: '#/components/schemas/_relationLinks'
        _toManyRelationshipRequest:
            type: object
            required:
                - data
            description: Input for manipulating a to-many relationship
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resourceIdentifier'
        _toOneRelationshipRequest:
            description: Input for manipulating a to-one relationship
            oneOf:
                - type: 'null'
                - type: object
                  required:
                      - data
                  properties:
                      data:
                          $ref: '#/components/schemas/_resourceIdentifier'
        _toManyRelationshipResponse:
            description: Response for a to-many relationship
            allOf:
                - $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                - type: object
                  properties:
                      jsonapi:
                          $ref: '#/components/schemas/_jsonapi'
        _toOneRelationshipResponse:
            description: Response for a to-one relationship
            allOf:
                - $ref: '#/components/schemas/_toOneRelationshipWithLinks'
                - type: object
                  properties:
                      jsonapi:
                          $ref: '#/components/schemas/_jsonapi'
        role:
            type: string
            description: The "role" Enum
            enum:
                - USER
                - ADMIN
        User:
            type: object
            description: The "User" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    properties:
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                        email:
                            type: string
                        role:
                            $ref: '#/components/schemas/role'
                relationships:
                    type: object
                    properties:
                        posts:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        profile:
                            oneOf:
                                - type: 'null'
                                - $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        UserCreateRequest:
            type: object
            description: Input for creating a "User"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "User" model
                    required:
                        - type
                        - attributes
                    properties:
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - updatedAt
                                - email
                            properties:
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                email:
                                    type: string
                                role:
                                    $ref: '#/components/schemas/role'
                        relationships:
                            type: object
                            properties:
                                posts:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                profile:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        UserUpdateRequest:
            type: object
            description: Input for updating a "User"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "User" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                email:
                                    type: string
                                role:
                                    $ref: '#/components/schemas/role'
                        relationships:
                            type: object
                            properties:
                                posts:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                profile:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        UserResponse:
            type: object
            description: Response for a "User"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/User'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &a1
                                      posts:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      profile:
                                          $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        UserListResponse:
            type: object
            description: Response for a list of "User"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/User'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *a1
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Profile:
            type: object
            description: The "Profile" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    properties:
                        image:
                            oneOf:
                                - type: 'null'
                                - type: string
                        userId:
                            type: string
                relationships:
                    type: object
                    properties:
                        user:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        ProfileCreateRequest:
            type: object
            description: Input for creating a "Profile"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Profile" model
                    required:
                        - type
                        - attributes
                    properties:
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - userId
                            properties:
                                image:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                userId:
                                    type: string
                        relationships:
                            type: object
                            properties:
                                user:
                                    $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        ProfileUpdateRequest:
            type: object
            description: Input for updating a "Profile"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Profile" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                image:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                userId:
                                    type: string
                        relationships:
                            type: object
                            properties:
                                user:
                                    $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        ProfileResponse:
            type: object
            description: Response for a "Profile"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Profile'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &a2
                                      user:
                                          $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        ProfileListResponse:
            type: object
            description: Response for a list of "Profile"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Profile'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *a2
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        post_Item:
            type: object
            description: The "post_Item" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    properties:
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                        title:
                            type: string
                        authorId:
                            oneOf:
                                - type: 'null'
                                - type: string
                        published:
                            type: boolean
                        viewCount:
                            type: integer
                        notes:
                            oneOf:
                                - type: 'null'
                                - type: string
                relationships:
                    type: object
                    properties:
                        author:
                            oneOf:
                                - type: 'null'
                                - $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        post_ItemCreateRequest:
            type: object
            description: Input for creating a "post_Item"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "post_Item" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - updatedAt
                                - title
                            properties:
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                title:
                                    type: string
                                authorId:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                published:
                                    type: boolean
                                viewCount:
                                    type: integer
                                notes:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                        relationships:
                            type: object
                            properties:
                                author:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        post_ItemUpdateRequest:
            type: object
            description: Input for updating a "post_Item"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "post_Item" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                title:
                                    type: string
                                authorId:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                published:
                                    type: boolean
                                viewCount:
                                    type: integer
                                notes:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                        relationships:
                            type: object
                            properties:
                                author:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        post_ItemResponse:
            type: object
            description: Response for a "post_Item"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/post_Item'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &a3
                                      author:
                                          $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        post_ItemListResponse:
            type: object
            description: Response for a list of "post_Item"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/post_Item'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *a3
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
    parameters:
        id:
            name: id
            in: path
            description: The resource id
            required: true
            schema:
                type: string
        include:
            name: include
            in: query
            description: Relationships to include
            required: false
            style: form
            schema:
                type: string
        sort:
            name: sort
            in: query
            description: Fields to sort by
            required: false
            style: form
            schema:
                type: string
        page-offset:
            name: page[offset]
            in: query
            description: Offset for pagination
            required: false
            style: form
            schema:
                type: integer
        page-limit:
            name: page[limit]
            in: query
            description: Limit for pagination
            required: false
            style: form
            schema:
                type: integer
